
@ВПроекте
метод Проверить(Условие: Булево, Сообщение: Строка = "", КонтекстПроверки: Строка = "")
    если не Условие
        пер ТекстИсключения: Строка

        знч ПустаяСтрока: (Строка)->Булево = СтрокаТекста -> СтрокаТекста.Пусто()

        если ПустаяСтрока(Сообщение)
            ТекстИсключения = "Недопустимая операция"
        иначе
            ТекстИсключения = Сообщение
        ;

        если не ПустаяСтрока(КонтекстПроверки)
            ТекстИсключения = "%ТекстИсключения в %КонтекстПроверки"
        ;

        выбросить новый ИсключениеНедопустимоеСостояние(Описание = ТекстИсключения)
    ;
;

@ВПроекте
метод ПроверитьРавно(П1: Строка, П2: Строка, Сообщение: Строка = "", КонтекстПроверки: Строка = "")
    П1 = П1.Сократить()
    П2 = П2.Сократить()
    Сообщение = 
    "Не совпадают 
    %П1
    %П2"
    Проверить(П1==П2,Сообщение,КонтекстПроверки)
;

@ВПроекте
метод ПроверитьРавно(П1: ДатаВремя, П2: ДатаВремя, Сообщение: Строка = "", КонтекстПроверки: Строка = "")
    // П1 = П1.Сократить()
    // П2 = П2.Сократить()
    Сообщение = 
    "Не совпадают 
    %П1
    %П2"
    Проверить(П1==П2,Сообщение,КонтекстПроверки)
;

// @ВПроекте
// метод ПроверитьРавно(П1: Объект, П2: Объект, Сообщение: Строка = "", КонтекстПроверки: Строка = "")
//     ТипП1 = П1.ПолучитьТип()
//     ТипП2 = П2.ПолучитьТип()
//     Если  ТипП1 != ТипП2 
//         возврат
//     ;
//     Если не Тип1.МожетБытьПрисвоенВ(Тип<Сравнимое>) 
//         возврат
//     ;
        
//     Сообщение =
//     "Не совпадают 
//     %П1
//     %П2"
    
//     Проверить((П1 как Сравнимое) == (П2 как Сравнимое), Сообщение, КонтекстПроверки)
// ;