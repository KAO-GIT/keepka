
метод ПриНажатии3(Источник: Кнопка, Событие: СобытиеПриНажатии)
    //  знч Источник2 = "один: 1, два: 2, три: 3, четыре: 4, пять: 5, шесть: 6, семь: 7, восемь: 8, девять: 9, десять: 10"
    //  знч РегВыражение = '[^|\W](два)[$|\W]'
    //  знч Заменитель = "$1"
     
    //  знч Результат = Источник2.Заменить(РегВыражение, Заменитель) 
    //  Сообщить(Результат)
    
    // пер МассивШаблонов: Массив<ШаблоныРазбораСтрок.ШаблонРазбора> = новый Массив<ШаблоныРазбораСтрок.ШаблонРазбора>()
    // МассивШаблонов.Добавить(новый  ШаблоныРазбораСтрок.ШаблонРазбора(ОбразецДляПоиска.ВСтроку(), ОбразецДляЗамены))

    // знч Результат = ШаблоныРазбораСтрок.РазобратьМассив(МассивШаблонов,ТестоваяСтрока)


    // пер ТестоваяСтрока = "позвонить в семь часов пять минут"
    
    // пер s = АнализДат.Разобрать(ТестоваяСтрока)

    // пер d = АнализДат.DateTimeParts.from(s, ДатаВремя.Сейчас() , 0)
    
    // пер pd = d.parse_data().ВСтроку()
    
    // Сообщить(
    // "%s 
    // %pd")
    
    // пер МассивШаблоновПредв: Массив<ШаблоныРазбораСтрок.ШаблонРазбора> = ШаблоныРазбораСтрок.ПолучитьШаблоныПредварительнойОбработки()
    // ТестоваяСтрока = ШаблоныРазбораСтрок.РазобратьМассив(МассивШаблоновПредв,ТестоваяСтрока)
    // пер МассивШаблоновВыдДаты: Массив<ШаблоныРазбораСтрок.ШаблонРазбора> = ШаблоныРазбораСтрок.ПолучитьШаблоныВыделенияСтрокиСДатой()
    // знч Результат = ШаблоныРазбораСтрок.РазделитьМассив(МассивШаблоновВыдДаты,ТестоваяСтрока)
    // Общие.ПроверитьРавно(Результат.Конец,"в понедельник")
    // Сообщить(Результат.Конец)    
    // пер Уведомление = новый Уведомление("Мое сообщение", Результат)
    // Уведомление.Показать() 
    
    // пер ТестоваяСтрока2 =
    //     ШаблоныРазбораСтрок.РазобратьМассив(ШаблоныРазбораСтрок.ПолучитьШаблоныСтроковыхПредставленийЧисел(),
    //     ТестоваяСтрока)
    
    // // Сообщить(ТестоваяСтрока2)


    // ТестоваяСтрока2 = ШаблоныРазбораСтрок.ПровестиПредварительнуюОбработку("позвонить в ближайшую среду")    
    // Сообщить(ТестоваяСтрока2)
    

    // ТестРазделения("позвонить в понедельник","в следующий понедельник")

    попытка 

        t2()
    
        новый Уведомление("Проверки", "Проверки пройдены успешно").Показать()
        
    поймать Искл: Исключение
        // попадем сюда, если хоть какое-то исключение случилось
        Сообщить( Искл.Описание )
    ;    
;

метод t2() 
    знч client_dt = "2024-08-27T10:53:00"
    знч vals = АнализДат.all_values()

    test_act(
            vals,
            "звонить третьего марта",
            "",
            "2025-03-03T10:00:00",
            client_dt
        )

        test_act(
            vals,
            "звонить в следующий вторник",
            "звонить `wdb` `nt`",
            "2024-09-03T10:00:00",
            client_dt
        )
        
        test_act(
            vals,
            "звонить во вторник",
            "звонить `wdb` `nt`",
            "2024-09-03T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в ближайшую среду",
            "звонить `wdc` `nt`",
            "2024-08-28T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в среду на  следующей неделе",
            "звонить `wdc` на `bw` `+w1` `nt`",
            "2024-09-04T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить двадцатого марта две тысячи двадцать пятого года",
            "звонить `d20` `n03` `y2025` года `nt`",
            "2025-03-20T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить вечером в 5:30",
            "`se` звонить `h5` `m30` `nd`",
            "2024-08-27T17:30:00",
            client_dt
        )
        test_act(
            vals,
            "звонить вечером",
            "`se` звонить `nd`",
            "2024-08-27T20:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в два часа с четвертью",
            "звонить `h2` `m15` `nd`",
            "2024-08-27T14:15:00",
            client_dt
        )
        test_act(
            // если время после 14:15 - берем следующий день
            vals,
            "звонить в два часа с четвертью",
            "звонить `h2` `m15` `nd`",
            "2024-08-28T14:15:00",
            "2024-08-27T18:53:00"
        )
        test_act(
            vals,
            "звонить в час и одну минуту",
            "звонить `h1` `m1` `nd`",
            "2024-08-27T13:01:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в пять ноль ноль",
            "звонить `h5` `m00` `nd`",
            "2024-08-27T17:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить без пяти минут девять",
            "звонить `-m5` `bh` `h9` `nd`",
            "2024-08-27T20:55:00",
            client_dt
        )
        test_act(
            vals,
            "звонить без десяти три",
            "звонить `-m10` `bh` `h3` `nd`",
            "2024-08-27T14:50:00",
            client_dt
        )
        test_act(
            vals,
            "звонить без пяти десять",
            "звонить `-m5` `bh` `h10` `nd`",
            "2024-08-27T21:55:00",
            client_dt
        )
        test_act(
            vals,
            "звонить пятнадцать минут первого",
            "звонить `-h1` `m15` `h1` `nd`",
            "2024-08-27T12:15:00",
            client_dt
        )
  
    ;

    метод t3() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()
        test_act(
            vals,
            "звонить 20/05 в 9 утра",
            "`sm` звонить `d20` `n05` `bh` `h9`",
            "2025-05-20T09:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через десять минут",
            "звонить `+m10` `nd`",
            "2024-08-27T11:03:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через три часа и двадцать пять минут",
            "звонить `+h3` `+m25` `nd`",
            "2024-08-27T14:18:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через три часа",
            "звонить `+h3` `+m00` `nd`",
            "2024-08-27T13:53:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через полчаса",
            "звонить `+m30` `nd`",
            "2024-08-27T11:23:00",
            client_dt
        )
        test_act(
            vals,
            "звонить полпервого",
            "звонить `-m30` `bh` `h1` `nd`",
            "2024-08-27T12:30:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в половине шестого",
            "звонить `-m30` `bh` `h6` `nd`",
            "2024-08-27T17:30:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в 40 минут восьмого",
            "звонить в `-h1` `m40` `h8` `nd`",
            "2024-08-27T19:40:00",
            client_dt
        )
    ;
    метод t4() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()
        test_act(
            vals,
            "звонить двадцать пятое ноября две тысячи двадцать четвёртого года.",
            "звонить `d25` `n11` `y2024` года. `nt`",
            "2024-11-25T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в одиннадцать часов утра.",
            "звонить `bh` `h11` утра. `nd`",
            "2024-08-27T11:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в шесть вечера",
            "`se` звонить `bh` `h6` `nd`",
            "2024-08-27T18:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в четыре часа ночи",
            "`sn` звонить `bh` `h4` `nd`",
            "2024-08-28T04:00:00",
            client_dt
        )
        test_act(
            vals,
            "В эти выходные в 9 утра",
            "`sm` `wdf` `bh` `h9`",
            "2024-08-31T09:00:00",
            client_dt
        )
        test_act(vals, "В эти выходные утром", "`sm` `wdf`", "2024-08-31T10:00:00", client_dt)
    ;
    метод t5() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()
        test_act(
            vals,
            "звонить в шесть вечера во вторник",
            "`se` звонить `bh` `h6` `wdb`",
            "2024-09-03T18:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить завтра",
            "звонить `bd` `+d1` `nt`",
            "2024-08-28T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить завтра вечером",
            "`se` звонить `bd` `+d1`",
            "2024-08-28T20:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить завтра в 2 часа 15 минут",
            "Позвонить `bd` `+d1` `h2` `m15`",
            "2024-08-28T14:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить послезавтра в 2 часа 15 минут",
            "Позвонить `bd` `+d2` `h2` `m15`",
            "2024-08-29T14:15:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через 120 минут",
            "звонить `+m120` `nd`",
            "2024-08-27T12:53:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через вторник утром",
            "`sm` звонить `+wdb` `nd`",
            "2024-08-28T10:00:00",
            client_dt
        )
    ;
    метод t6() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()

        test_act(
            vals,
            "Позвонить утром",
            "`sm` Позвонить `nd`",
            "2024-08-28T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в понедельник в 10 00",
            "Позвонить `wda` `h10` `m00`",
            "2024-09-02T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в понедельник утром",
            "`sm` Позвонить `wda`",
            "2024-09-02T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить через минуту",
            "Позвонить `+m1` `nd`",
            "2024-08-27T10:54:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить через час",
            "Позвонить `+h1` `+m00` `nd`",
            "2024-08-27T11:53:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 2 часа 15 минут",
            "Позвонить `h2` `m15` `nd`",
            "2024-08-27T14:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 5 Часов ",
            "Позвонить `bh` `h5` `nd`",
            "2024-08-27T17:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 09 15",
            "Позвонить `h09` `m15` `nd`",
            "2024-08-27T21:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 9:15",
            "Позвонить `h9` `m15` `nd`",
            "2024-08-27T21:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 9:15 вечера",
            "`se` Позвонить `h9` `m15` `nd`",
            "2024-08-27T21:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить 12 октября в 9:15 вечера",
            "`se` Позвонить `d12` `n10` `h9` `m15`",
            "2024-10-12T21:15:00",
            client_dt
        )
    ;

    метод t7() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()

        test_act(
            vals,
            "звонить в 10 30 утра",
            "`sm` звонить `h10` `m30` `nd`",
            "2024-08-28T10:30:00",
            client_dt
        )
        test_act(
            vals,
            "звонить в 10 30",
            "звонить `h10` `m30` `nd`",
            "2024-08-27T22:30:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через неделю",
            "звонить `+w1` `nt`",
            "2024-09-03T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "звонить через 2 недели",
            "звонить `+w2` `nt`",
            "2024-09-10T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить 26 ноября.",
            "Позвонить `d26` `n11` . `nt`",
            "2024-11-26T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить через 2 дня в 10 15",
            "Позвонить `+d2` `h10` `m15`",
            "2024-08-29T10:15:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить 15 января ",
            "Позвонить `d15` `n01` `nt`",
            "2025-01-15T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить 15 февраля ",
            "Позвонить `d15` `n02` `nt`",
            "2025-02-15T10:00:00",
            client_dt
        )
        test_act(
            vals,
            "Позвонить в 1 понедельник следующего месяца ",
            "Позвонить `wda1` `bn` `+n1` `nt`",
            "2024-09-02T10:00:00",
            client_dt
        )
    ;

    метод t8() 
        знч client_dt = "2024-08-27T10:53:00"
        знч vals = АнализДат.all_values()

        test_act(
            vals,
            "звонить в полночь и 15 минут",
            "`sn` звонить `h12` `m15` `nd`",
            "2024-08-28T00:15:00",
            client_dt
        )
        test_act(
            vals,
            "звонить за 15 минут до полуночи",
            "`sn` звонить `-m15` `bh` `h12` часов `nd`",
            "2024-08-27T23:45:00",
            client_dt
        )
    ;


метод test_act(
         vals: Массив<АнализДат.ParsingTemplate>,
         source: Строка,
         dest_str: Строка,
         dest_dts: Строка,
         client_dt: Строка,
         проч: Строка=""
     ) 
     АнализДат.test_act(
         vals,
         source,
         dest_str,
         dest_dts,
         client_dt
     ) 
;

// метод ТестРазделения(Источник:Строка, ПроверочнаяСтрока:Строка)
//     знч Результат = СодержимоеИДата.Из(Источник)
//     Общие.ПроверитьРавно(Результат.СтрокаСДатой,ПроверочнаяСтрока)
// ;

//метод ТестПреобразованияСтроковыхПредставлений()
// 1. Первое мая две тысячи двадцать второго года.
// 2. Пятого февраля две тысячи двадцать третьего года.
// 3. Двадцать пятое ноября две тысячи двадцать четвёртого года.
// 4. Десятое марта две тысячи двадцать пятого года.
// 5. Вчера было первое апреля две тысячи двадцать шестого года.
// 6. Восьмого сентября две тысячи двадцать седьмого года.
// 7. Тринадцатое января две тысячи двадцать восьмого года.
// 8. Второе июня две тысячи двадцать девятого года.
// 9. Семнадцатое августа две тысячи тридцатого года.
// 10. Двадцать второе октября две тысячи тридцать первого года.
// 1. Пятнадцать минут после двенадцати.
// 2. Без пяти час.
// 3. Полпервого.
// 4. Одиннадцать часов утра.
// 5. Шесть вечера.
// 6. Половина шестого.
// 7. Четыре часа ночи.
// 8. Без десяти три.  
//;    

// @Обработчик
// метод ПослеСоздания()
    
//     знч Эл = новый СодержимоеИДата("Позвонить вечером")
//     Компоненты.Список.Источник.Данные.Добавить(Эл)

