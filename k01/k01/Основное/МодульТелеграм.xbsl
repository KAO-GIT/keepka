// модуль серверный

конст URL_TELEGRAM = "https://api.telegram.org"

@ВПроекте
метод ПолучитьТокен(): Строка 
    исп Результат = Запрос{
        ВЫБРАТЬ Токен как Токен ИЗ СправочникНастройки ГДЕ Код == 1 
    }.Выполнить()

    знч Токен = Результат.ПервыйИлиУмолчание().Токен

    Результат.Закрыть()

    возврат Токен
;

@ВПроекте
метод ПолучитьКлючАвторизации(): Строка
    исп Результат = Запрос{
        ВЫБРАТЬ
            КлючАвторизацииСбер 
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание().КлючАвторизацииСбер

    Результат.Закрыть()

    возврат Рез
;


@ВПроекте
метод ПолучитьПутьWebhook(): Строка
    исп Результат = Запрос{
        ВЫБРАТЬ
            АдресПриложения,
            SpecialString
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание()

    Результат.Закрыть()

    возврат "%{Рез.АдресПриложения}/api/k/bot/%{Рез.SpecialString}/"
;

@ВПроекте
метод ПолучитьАдресПриложения(): Строка 
    исп Результат = Запрос{
        ВЫБРАТЬ АдресПриложения ИЗ СправочникНастройки ГДЕ Код == 1 
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание()

    Результат.Закрыть()

    возврат "%{Рез.АдресПриложения}"
;

@ВПроекте
метод ПолучитьSpecialString(): Строка
    // Дополнительная проверка, в пути сервиса должна быть эта строка
    
    исп Результат = Запрос{
        ВЫБРАТЬ
            SpecialString
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание().SpecialString

    Результат.Закрыть()

    возврат Рез
;


@ВПроекте
метод УстановитьWebhook(): Строка
 
    пер Токен = ПолучитьТокен()
    //Токен = Токен.Заменить(":","%3A")
    
    знч Webhook = ПолучитьПутьWebhook()
    
    знч URL = "%{URL_TELEGRAM}/bot%Токен/setWebHook"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("url", Webhook)

//     Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
//     Запрос.ДобавитьЗаголовок("Accept", "*/*")
//     Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
//     Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    знч Ответ = Запрос.Выполнить()
    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод УдалитьWebhook(): Строка
 
    знч Токен = ПолучитьТокен()
    
    знч URL = "%{URL_TELEGRAM}/bot%Токен/deleteWebHook"

    пер Запрос = КлиентHttp.ЗапросGet(URL)

//     Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
//     Запрос.ДобавитьЗаголовок("Accept", "*/*")
//     Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
//     Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    знч Ответ = Запрос.Выполнить()
    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод ОтправитьТекстовоеСообщение(IDЧата: Число, Текст: Строка): Строка
    возврат ОтправитьТекстовоеСообщение(IDЧата,Текст,ВидыКлавиатуры.НеПоказывать)
;

@ВПроекте
метод ОтправитьТекстовоеСообщение(IDЧата: Число, Текст: Строка, ВидКлавиатуры: ВидыКлавиатуры): Строка
    знч Токен = ПолучитьТокен()

    знч URL = "%{URL_TELEGRAM}/bot%Токен/sendMessage"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("chat_id", IDЧата.ВСтроку())
        .ДобавитьПараметрЗапроса("parse_mode", "Markdown")
        .ДобавитьПараметрЗапроса("text", Текст)

    выбор ВидКлавиатуры
    когда ВидыКлавиатуры.Продление
        Запрос.ДобавитьПараметрЗапроса("reply_markup", ПолучитьКлавиатуруПродление())
    когда ВидыКлавиатуры.Подтверждение
        Запрос.ДобавитьПараметрЗапроса("reply_markup", ПолучитьКлавиатуруПодтверждение())
    иначе
    ;

    Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
    Запрос.ДобавитьЗаголовок("Accept", "*/*")
    Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
    Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    пер Ответ = Запрос.Выполнить()

    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод ОтправитьПодтверждениеНажатияКнопки(CallbackQueryId: Строка, ИмяКоманды: Строка): Строка
    знч Токен = ПолучитьТокен()

    знч URL = "%{URL_TELEGRAM}/bot%Токен/answerCallbackQuery"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("callback_query_id", CallbackQueryId.ВСтроку())


    Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
    Запрос.ДобавитьЗаголовок("Accept", "*/*")
    Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
    Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    пер Ответ = Запрос.Выполнить()

    возврат Ответ.Тело.ПрочитатьКакСтроку()
;


@ВПроекте
метод ВариантыПродленияДляРазбора(): Соответствие<Строка, Строка>
    // варианты продления для разбора выражения, пока просто совпадают
    возврат новый Соответствие(ВариантыПродления())
;

@Локально
метод ВариантыПродления(): Соответствие<Строка, Строка>
    // отображение вариантов в телеграм-боте
    возврат {
        "m5": "Через 5 минут.",
        "m10": "Через 10 минут.",
        "m15": "Через 15 минут.",
        "m30": "Через полчаса.",
        "h1": "Через час.",
        "h2": "Через 2 часа.",
        "h3": "Через 3 часа.",
        "h24": "Через сутки."
    }
;

@ВПроекте
перечисление ВидыКлавиатуры
    НеПоказывать,
    Продление,
    Подтверждение
;


@Локально
структура КнопкаПродление
    пер text: Строка
    пер callback_data: Строка?
;

@Локально
структура КнопкаПодтверждение
    пер text: Строка
    пер url: Строка?
;


@Локально
метод ПолучитьКлавиатуруПродление(): Строка
    знч Вар = ВариантыПродления()
    пер Ключ: Строка
    
    пер Клавиатура = новый Соответствие<Строка, Массив<Массив<КнопкаПродление>>>()

    пер КнопкиСтр1 = новый Массив<КнопкаПродление>()
    Ключ = "m5"
    КнопкиСтр1.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "m10"
    КнопкиСтр1.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "m15"
    КнопкиСтр1.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "m30"
    КнопкиСтр1.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))

    пер КнопкиСтр2 = новый Массив<КнопкаПродление>()
    Ключ = "h1"
    КнопкиСтр2.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "h2"
    КнопкиСтр2.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "h3"
    КнопкиСтр2.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))
    Ключ = "h24"
    КнопкиСтр2.Добавить(новый КнопкаПродление(text = Вар[Ключ], callback_data = Ключ))

    Клавиатура.Вставить("inline_keyboard", [КнопкиСтр1, КнопкиСтр2])

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;


@Локально
метод ПолучитьКлавиатуруПодтверждение(): Строка
    пер Клавиатура = новый Соответствие<Строка, Массив<Массив<КнопкаПодтверждение>>>()

    пер КнопкиСтр1 = новый Массив<КнопкаПодтверждение>()
    КнопкиСтр1.Добавить(новый КнопкаПодтверждение(text = "Открыть ссылку", url = "%{ПолучитьАдресПриложения()}"))

    Клавиатура.Вставить("inline_keyboard", [КнопкиСтр1])

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;

/*
@Локально
метод ПолучитьОбычнуюКлавиатуруУдаление(): Строка
    пер Клавиатура = новый Соответствие<Строка, Булево>()
    Клавиатура.Вставить("remove_keyboard", Истина)

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;
*/

@ВПроекте
метод СкачатьИРазобратьРечь(ИдФайла: Строка): Строка
    знч Токен = ПолучитьТокен()

    //Пауза(1с)

    пер URL = "%{URL_TELEGRAM}/bot%Токен/getFile"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("file_id", ИдФайла)
    пер Ответ = Запрос.Выполнить()

    знч ЧтениеJson = new ЧтениеJson(Ответ.Тело.ПрочитатьКакСтроку())
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()
    пер ПутьРез = ТелоКакСоответствие.Получить("result") как Соответствие<Строка, Объект?>
    пер Путь = ПутьРез.Получить("file_path") как Строка

    URL = "%{URL_TELEGRAM}/file/bot%Токен/%Путь"

    Запрос = КлиентHttp.ЗапросGet(URL)
    Ответ = Запрос.Выполнить()
    
    знч Размер = Ответ.Заголовки.ПолучитьПервый("Content-Length")
    знч ТипСодержимого = Ответ.Заголовки.ПолучитьПервый("Content-Type")

    // Загрузить двоичные данные в хранилище.
    знч Звук: ДвоичныйОбъект = ОбъектноеХранилище.Загрузить(Ответ.Тело, новый Число(Размер), ТипСодержимого)

    возврат РазобратьРечь(Звук)
;

@ВПроекте
метод ПолучитьСберТокен(): Строка
    знч Ключ = ПолучитьКлючАвторизации()
    
    пер URL = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"

    пер Запрос = КлиентHttp.ЗапросPost(URL)
        .ДобавитьЗаголовок("Content-Type", "application/x-www-form-urlencoded")      
        .ДобавитьЗаголовок("Accept", "application/json")
        .ДобавитьЗаголовок("RqUID", "%{новый Ууид()}")
        .ДобавитьЗаголовок("Authorization", "Basic %Ключ")
        .УстановитьТело("scope=SALUTE_SPEECH_PERS")
        
    пер Ответ = Запрос.Выполнить()
    знч ТелоЗапроса = Ответ.Тело.ПрочитатьКакСтроку()
    знч ЧтениеJson = new ЧтениеJson(ТелоЗапроса)
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()
    возврат ТелоКакСоответствие["access_token"]  как Строка
;    

@ВПроекте
метод РазобратьРечь(Звук:ДвоичныйОбъект): Строка
    
    пер URL = "https://smartspeech.sber.ru/rest/v1/speech:recognize"

    пер Запрос = КлиентHttp.ЗапросPost(URL)
        .ДобавитьЗаголовок("Content-Type", "audio/ogg;codecs=opus")      
        .ДобавитьЗаголовок("Accept", "application/json")
        .ДобавитьЗаголовок("Authorization", "Bearer %{ПолучитьСберТокен()}")
        //.ДобавитьЗаголовок("Content-Length", Звук.Размер.ВБайтах())

    исп Поток = Звук.ОткрытьПотокЧтения()
    Запрос.УстановитьТело(Поток)
        
    пер Ответ = Запрос.Выполнить()

    Поток.Закрыть()
    
    знч ТелоЗапроса = Ответ.Тело.ПрочитатьКакСтроку()
    знч ЧтениеJson = new ЧтениеJson(ТелоЗапроса)
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()

    пер ИтоговаяСтрока = ""

    если ТелоКакСоответствие.СодержитКлюч("result") 
        знч Рез = ТелоКакСоответствие.Получить("result") как Array<Object?>
        ИтоговаяСтрока = Рез.ПервыйИлиУмолчание() как Строка
    ;    
    
//    возврат ТелоКакСоответствие["access_token"]  как Строка
    возврат ИтоговаяСтрока
;

// curl -L -X POST 'https://ngw.devices.sberbank.ru:9443/api/v2/oauth' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: application/json' -H 'RqUID: 4fadbe99-84bf-4bae-8bc3-71bad17dfae5' -H 'Authorization: Basic <Authorization key>' --data-urlencode 'scope= SALUTE_SPEECH_PERS'

