// модуль серверный

конст URL_TELEGRAM = "https://api.telegram.org"

@ВПроекте
метод ПолучитьТокен(): Строка 
    исп Результат = Запрос{
        ВЫБРАТЬ Токен как Токен ИЗ СправочникНастройки ГДЕ Код == 1 
    }.Выполнить()

    знч Токен = Результат.ПервыйИлиУмолчание().Токен

    Результат.Закрыть()

    возврат Токен
;

@ВПроекте
метод ПолучитьКлючАвторизации(): Строка
    исп Результат = Запрос{
        ВЫБРАТЬ
            КлючАвторизацииСбер 
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание().КлючАвторизацииСбер

    Результат.Закрыть()

    возврат Рез
;


@ВПроекте
метод ПолучитьПутьWebhook(): Строка
    исп Результат = Запрос{
        ВЫБРАТЬ
            АдресПриложения,
            SpecialString
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание()

    Результат.Закрыть()

    возврат "%{Рез.АдресПриложения}/api/k/bot/%{Рез.SpecialString}/"
;

@ВПроекте
метод ПолучитьАдресПриложения(): Строка 
    исп Результат = Запрос{
        ВЫБРАТЬ АдресПриложения ИЗ СправочникНастройки ГДЕ Код == 1 
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание()

    Результат.Закрыть()

    возврат "%{Рез.АдресПриложения}"
;

@ВПроекте
метод ПолучитьSpecialString(): Строка
    // Дополнительная проверка, в пути сервиса должна быть эта строка
    
    исп Результат = Запрос{
        ВЫБРАТЬ
            SpecialString
        ИЗ
            СправочникНастройки
        ГДЕ
            Код == 1
    }.Выполнить()

    знч Рез = Результат.ПервыйИлиУмолчание().SpecialString

    Результат.Закрыть()

    возврат Рез
;


@ВПроекте
метод УстановитьWebhook(): Строка
 
    пер Токен = ПолучитьТокен()
    //Токен = Токен.Заменить(":","%3A")
    
    знч Webhook = ПолучитьПутьWebhook()
    
    знч URL = "%{URL_TELEGRAM}/bot%Токен/setWebHook"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("url", Webhook)

//     Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
//     Запрос.ДобавитьЗаголовок("Accept", "*/*")
//     Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
//     Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    знч Ответ = Запрос.Выполнить()
    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод УдалитьWebhook(): Строка
 
    знч Токен = ПолучитьТокен()
    
    знч URL = "%{URL_TELEGRAM}/bot%Токен/deleteWebHook"

    пер Запрос = КлиентHttp.ЗапросGet(URL)

//     Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
//     Запрос.ДобавитьЗаголовок("Accept", "*/*")
//     Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
//     Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    знч Ответ = Запрос.Выполнить()
    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод ОтправитьТекстовоеСообщение(IDЧата: Число, Текст: Строка): Строка
    возврат ОтправитьТекстовоеСообщение(IDЧата,Текст,ВидыКлавиатуры.НеПоказывать)
;

@ВПроекте
метод ОтправитьТекстовоеСообщение(IDЧата: Число, Текст: Строка, ВидКлавиатуры: ВидыКлавиатуры): Строка
    знч Токен = ПолучитьТокен()

    знч URL = "%{URL_TELEGRAM}/bot%Токен/sendMessage"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("chat_id", IDЧата.ВСтроку())
        .ДобавитьПараметрЗапроса("parse_mode", "Markdown")
        .ДобавитьПараметрЗапроса("text", Текст)

    выбор ВидКлавиатуры
    когда ВидыКлавиатуры.Продление
        Запрос.ДобавитьПараметрЗапроса("reply_markup", ПолучитьКлавиатуруПродление())
    когда ВидыКлавиатуры.Подтверждение
        Запрос.ДобавитьПараметрЗапроса("reply_markup", ПолучитьКлавиатуруПодтверждение())
    иначе
    ;

    Запрос.ДобавитьЗаголовок("Accept-Encoding", "gzip")
    Запрос.ДобавитьЗаголовок("Accept", "*/*")
    Запрос.ДобавитьЗаголовок("Connection", "keep-alive")
    Запрос.ДобавитьЗаголовок("Accept-Charset", "utf-8")

    пер Ответ = Запрос.Выполнить()

    возврат Ответ.Тело.ПрочитатьКакСтроку()
;


@ВПроекте
перечисление ВидыКлавиатуры
    НеПоказывать,
    Продление,
    Подтверждение
;


@Локально
структура Кнопка
    пер text: Строка
    пер callback_data: Строка?
    пер url: Строка?
;


@Локально
метод ПолучитьКлавиатуруПродление(): Строка
    пер Клавиатура = новый Соответствие<Строка, Массив<Массив<Кнопка>>>()

    пер КнопкиСтр1 = новый Массив<Кнопка>()
    КнопкиСтр1.Добавить(новый Кнопка(text = "через 5 минут", callback_data = "m5"))
    КнопкиСтр1.Добавить(новый Кнопка(text = "через 15 минут", callback_data = "m15"))
    КнопкиСтр1.Добавить(новый Кнопка(text = "через полчаса", callback_data = "m30"))

    пер КнопкиСтр2 = новый Массив<Кнопка>()
    КнопкиСтр2.Добавить(новый Кнопка(text = "через час", callback_data = "m60"))
    КнопкиСтр2.Добавить(новый Кнопка(text = "через 2 часа", callback_data = "m120"))
    КнопкиСтр2.Добавить(новый Кнопка(text = "через сутки", callback_data = "h24"))

    Клавиатура.Вставить("inline_keyboard", [КнопкиСтр1, КнопкиСтр2])

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;


@Локально
метод ПолучитьКлавиатуруПодтверждение(): Строка
    пер Клавиатура = новый Соответствие<Строка, Массив<Массив<Кнопка>>>()

    пер КнопкиСтр1 = новый Массив<Кнопка>()
    КнопкиСтр1.Добавить(новый Кнопка(text = "Открыть ссылку", url = "%{ПолучитьАдресПриложения()}"))

    Клавиатура.Вставить("inline_keyboard", [КнопкиСтр1])

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;

/*
@Локально
метод ПолучитьОбычнуюКлавиатуруУдаление(): Строка
    пер Клавиатура = новый Соответствие<Строка, Булево>()
    Клавиатура.Вставить("remove_keyboard", Истина)

    знч Результат = СериализацияJson.ЗаписатьОбъект(Клавиатура)

    возврат Результат
;
*/

@ВПроекте
метод СкачатьФайл(ИдФайла: Строка): Строка
    знч Токен = ПолучитьТокен()

    //Пауза(1с)

    пер URL = "%{URL_TELEGRAM}/bot%Токен/getFile"

    пер Запрос = КлиентHttp.ЗапросGet(URL)
        .ДобавитьПараметрЗапроса("file_id", ИдФайла)
    пер Ответ = Запрос.Выполнить()

    знч ЧтениеJson = new ЧтениеJson(Ответ.Тело.ПрочитатьКакСтроку())
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()
    пер ПутьРез = ТелоКакСоответствие.Получить("Result") как Соответствие<Строка, Объект?>
    пер Путь = ПутьРез.Получить("file_path") как Строка

    URL = "%{URL_TELEGRAM}/file/bot%Токен/%Путь"

    Запрос = КлиентHttp.ЗапросGet(URL)
    Ответ = Запрос.Выполнить()

    возврат Ответ.Тело.ПрочитатьКакСтроку()
;

@ВПроекте
метод ПолучитьСберТокен(): Строка
    знч Ключ = ПолучитьКлючАвторизации()
    
    пер URL = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"

    пер Запрос = КлиентHttp.ЗапросPost(URL)
        .ДобавитьЗаголовок("Content-Type", "application/x-www-form-urlencoded")      
        .ДобавитьЗаголовок("Accept", "application/json")
        .ДобавитьЗаголовок("RqUID", "4fadbe99-84bf-4bae-8bc3-71bad17dfae5")
        .ДобавитьЗаголовок("Authorization", "Basic %Ключ")
        .УстановитьТело("scope=SALUTE_SPEECH_PERS")
        
    пер Ответ = Запрос.Выполнить()
    знч ТелоЗапроса = Ответ.Тело.ПрочитатьКакСтроку()
    знч ЧтениеJson = new ЧтениеJson(ТелоЗапроса)
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()
    возврат ТелоКакСоответствие["access_token"]  как Строка
;    

// curl -L -X POST 'https://ngw.devices.sberbank.ru:9443/api/v2/oauth' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: application/json' -H 'RqUID: 4fadbe99-84bf-4bae-8bc3-71bad17dfae5' -H 'Authorization: Basic <Authorization key>' --data-urlencode 'scope= SALUTE_SPEECH_PERS'

