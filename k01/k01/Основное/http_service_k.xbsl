метод ОбработкаЗапроса(Запрос: HttpСервисЗапрос)
    пер Ответ = Запрос.Ответ
    Ответ.Заголовки.Установить("Content-Type", "text/plain")
    Ответ.УстановитьТело("Ok")
//ДатаВремя.Сейчас().ВСтроку()
;

метод BotPOSTОбработкаЗапроса(Запрос: HttpСервисЗапрос)
    знч SpecialString = Запрос.Параметры.ПолучитьПервый("SpecialString")
    если МодульТелеграм.ПолучитьSpecialString() != SpecialString
        пер Ответ = Запрос.Ответ
        Ответ.УстановитьТело("Неверный протокол")
        возврат
    ;

    знч ТелоЗапроса = Запрос.Тело.ПрочитатьКакСтроку()

    новый ExecutionEvent(Details = ТелоЗапроса).Записать()

    знч ЧтениеJson = new ЧтениеJson(ТелоЗапроса)
    знч ТелоКакСоответствие = ЧтениеJson.ПрочитатьСодержимоеКакСоответствие()

    пер Message: Соответствие<Строка, Объект?>
    пер Command: Соответствие<Строка, Объект?>
    пер CommandName: Строка?
    пер CallbackQueryId: Строка?

    если ТелоКакСоответствие.СодержитКлюч("message")
        Message = ТелоКакСоответствие.Получить("message") как Соответствие<Строка, Объект?>
    иначе если ТелоКакСоответствие.СодержитКлюч("edited_message")
        Message = ТелоКакСоответствие.Получить("edited_message") как Соответствие<Строка, Объект?>
    иначе если ТелоКакСоответствие.СодержитКлюч("callback_query")
        Command = ТелоКакСоответствие.Получить("callback_query") как Соответствие<Строка, Объект?>
        CommandName = Command.Получить("data") как Строка
        CallbackQueryId = Command.Получить("id") как Строка
        Message = Command.Получить("message") как Соответствие<Строка, Объект?>
    иначе
        пер Ответ = Запрос.Ответ
        Ответ.УстановитьТело("Не найдено сообщение")
        возврат
    ;

    пер ТекстСообщения: Строка
    пер ТекстДополнительный: Строка = ""

    если Message.СодержитКлюч("voice")
        знч Признак = Message.Получить("voice") как Соответствие<Строка, Объект?>
        знч ИдФайла = Признак.Получить("file_id") как Строка

        ТекстСообщения = МодульТелеграм.СкачатьИРазобратьРечь(ИдФайла)
        ТекстДополнительный = ", %ТекстСообщения"

    иначе если Message.СодержитКлюч("text")
        ТекстСообщения = Message.Получить("text") как Строка

    иначе
        пер Ответ = Запрос.Ответ
        Ответ.УстановитьТело("Не найдено сообщение")
        возврат
    ;

    знч Chat = Message.Получить("chat") как Соответствие<Строка, Объект?>
    знч ИдЧата = Chat.Получить("id") как Число
    знч ИдСообщения = Message.Получить("message_id") как Число

    /*
     *     пер ИмяПользователя: Строка = ""
     *     если Chat.СодержитКлюч("first_name")
     *         ИмяПользователя = Chat.Получить("first_name") как Строка
     *     ;    
     */
    знч ДатаСообщенияЧислом = Message.Получить("date") как Число
    пер ДатаСообщения = Момент.ИзОтметкиВремениUnix(ДатаСообщенияЧислом).ВДатаВремя(ЧасовойПояс.Текущий())
    //.ДобавитьМинуты(1) // добавим минуту

    пер ОтветСтрокой: Строка

    если CommandName != Неопределено // пришла команда продления
        пер ТекстПодтвержденияНажатия = ""
        если МодульТелеграм.ЭтоКомандаОтмены(CommandName)
            новый ExecutionEvent(Details = "${ИдЧата}, ${ИдСообщения} отмена ").Записать()

            ТекстПодтвержденияНажатия = МодульТелеграм.ОбработатьКомандуОтмены(CommandName)
            ТекстСообщения = ""
        иначе если МодульТелеграм.ЭтоКомандаПродления(CommandName)
            ДатаСообщения = ДатаВремя.Сейчас() // поменям дату на текущую
            знч ТекстПродления = МодульТелеграм.ВариантыПродленияДляРазбора().Получить(CommandName)
            ТекстСообщения = ТекстСообщения.Заменить("<<", "").Заменить(">>", "")
            ТекстСообщения = "Продление: %ТекстПродления <<%ТекстСообщения>>"
        ;
        МодульТелеграм.ОтправитьПодтверждениеНажатияКнопки(CallbackQueryId, CommandName, ТекстПодтвержденияНажатия)
    ;

    если ТекстСообщения.Пусто()
        пер Ответ = Запрос.Ответ
        Ответ.УстановитьТело("")
        возврат
    ;

    знч s = АнализДат.Разобрать(ТекстСообщения)
    знч d = АнализДат.DateTimeParts.from(s, ДатаСообщения, 0)
    знч ДатаСообщенияРазобранная = d.parse_data()

    если ДатаСообщенияРазобранная == Неопределено
        ОтветСтрокой = МодульТелеграм.ОтправитьТекстовоеСообщение(ИдЧата,
                        "${ДатаСообщения|дд.ММ.гггг ЧЧ:мм}, не определено время %ТекстДополнительный")

    иначе если ДатаСообщенияРазобранная <= ДатаВремя.Сейчас()
        ОтветСтрокой = МодульТелеграм.ОтправитьТекстовоеСообщение(ИдЧата,
                        "${ДатаСообщения|дд.ММ.гггг ЧЧ:мм}, определено уже прошедшее время ${ДатаСообщенияРазобранная|дд.ММ.гггг ЧЧ:мм} %ТекстДополнительный")
    иначе
        
        знч Поля = новый СтруктураПолученныхПолей(СтрокаИсходная = ТекстСообщения,
            ДатаРегистрации = ДатаСообщения,
            ДатаНапоминания = ДатаСообщенияРазобранная,
            ИдСообщения = ИдСообщения,
            ИдЧата = ИдЧата)

        знч НовыйКод = СправочникНапоминаний.ОбработатьНапоминание(Поля)

        ОтветСтрокой = МодульТелеграм.ОтправитьТекстовоеСообщение(ИдЧата,
                        "${ДатаСообщения|дд.ММ.гггг ЧЧ:мм}, определено время: ${ДатаСообщенияРазобранная|дд.ММ.гггг ЧЧ:мм} %ТекстДополнительный",
            МодульТелеграм.ВидыКлавиатуры.Подтверждение, НовыйКод)
    ;

    пер Ответ = Запрос.Ответ
    //Ответ.Заголовки.Установить("Content-Type", "text/plain")
    Ответ.УстановитьТело(ОтветСтрокой)
;